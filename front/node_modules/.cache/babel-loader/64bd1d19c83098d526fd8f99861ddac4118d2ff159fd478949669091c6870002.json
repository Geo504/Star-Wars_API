{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geovanny Valladares\\\\Desktop\\\\Dise\\xF1o Web\\\\Estudio\\\\4Geeks Academy\\\\Modulo 2\\\\Star Wars Blog\\\\star-wars-blog\\\\src\\\\Context\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { characterData, planetsData } from '../Components/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const getCharacterData = () => {\n    fetch(\"https://www.swapi.tech/api/people\").then(res => {\n      if (!(res.status >= 200 && res.status < 300)) {\n        throw Error(`You have an error ${res.status} in request user data!`);\n      }\n      return res.json();\n    }).then(body => {\n      body.results.map(character => {\n        fetch(character.url).then(res => {\n          if (!(res.status >= 200 && res.status < 300)) {\n            throw Error(`You have an error ${res.status} in request user data!`);\n          }\n          return res.json();\n        }).then(charaterData => {\n          console.log(body);\n        });\n      });\n    }).catch(err => console.log(err));\n  };\n  getCharacterData();\n  const [characters, setCharacter] = useState(characterData);\n  const [planets, setPlanets] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    setCharacter(characterData.map(character => ({\n      favorite: false,\n      ...character\n    })));\n  }, []);\n  useEffect(() => {\n    setPlanets(planetsData.map(planet => ({\n      favorite: false,\n      ...planet\n    })));\n  }, []);\n  const switchFavoritesCharacter = id => {\n    const updateCharacters = characters.map(item => {\n      if (item.id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    setCharacter(updateCharacters);\n    handleFavorites();\n  };\n  const switchFavoritesPlanets = id => {\n    const updatePlanets = planets.map(item => {\n      if (item.id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    setPlanets(updatePlanets);\n    handleFavorites();\n  };\n  const deleteFavorite = id => {\n    const updateCharacters = characters.filter(item => {\n      if (item.id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    const updatePlanets = planets.filter(item => {\n      if (item.id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    setCharacter(updateCharacters);\n    setPlanets(updatePlanets);\n    handleFavorites();\n  };\n  const handleFavorites = () => {\n    const favoritesListCharacters = characters.filter(item => item.favorite === true);\n    const favoritesListPlanets = planets.filter(item => item.favorite === true);\n    const favoritesList = favoritesListCharacters.concat(favoritesListPlanets);\n    setFavorites(favoritesList);\n  };\n  const store = useMemo(() => {\n    return {\n      characters,\n      planets,\n      favorites\n    };\n  }, [characters, planets]);\n  const actions = {\n    switchFavoritesCharacter,\n    switchFavoritesPlanets,\n    deleteFavorite\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      store,\n      actions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"mul3xpwvFYTRDGi5dCS2jpgmT7Y=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useState","characterData","planetsData","jsxDEV","_jsxDEV","AppContext","AppProvider","_ref","_s","children","getCharacterData","fetch","then","res","status","Error","json","body","results","map","character","url","charaterData","console","log","catch","err","characters","setCharacter","planets","setPlanets","favorites","setFavorites","favorite","planet","switchFavoritesCharacter","id","updateCharacters","item","handleFavorites","switchFavoritesPlanets","updatePlanets","deleteFavorite","filter","favoritesListCharacters","favoritesListPlanets","favoritesList","concat","store","actions","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","$RefreshReg$"],"sources":["C:/Users/Geovanny Valladares/Desktop/DiseÃ±o Web/Estudio/4Geeks Academy/Modulo 2/Star Wars Blog/star-wars-blog/src/Context/AppContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\nimport {characterData, planetsData} from '../Components/data'\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppProvider = ({children}) => {\r\n\r\n  const getCharacterData = () => {\r\n    fetch(\"https://www.swapi.tech/api/people\")\r\n    .then((res) => {\r\n      if (!(res.status >= 200 && res.status < 300)) {\r\n        throw Error(`You have an error ${res.status} in request user data!`);\r\n      }\r\n      return res.json();\r\n    })\r\n    .then((body) => {\r\n      body.results.map(character=>{\r\n        fetch(character.url)\r\n        .then((res) => {\r\n          if (!(res.status >= 200 && res.status < 300)) {\r\n            throw Error(`You have an error ${res.status} in request user data!`);\r\n          }\r\n          return res.json();\r\n        })\r\n        .then((charaterData) => {\r\n          console.log(body);\r\n        })\r\n      })\r\n    })\r\n    .catch((err) => console.log(err));\r\n  };\r\n  \r\n  getCharacterData();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const [characters, setCharacter]=useState(characterData);\r\n  const [planets, setPlanets]=useState([]);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    setCharacter(characterData.map(character=>({favorite: false, ...character})));\r\n  },[]);\r\n\r\n  useEffect(()=>{\r\n    setPlanets(planetsData.map(planet=>({favorite: false, ...planet})));\r\n  },[])\r\n\r\n\r\n\r\n  const switchFavoritesCharacter = (id) =>{\r\n    const updateCharacters = characters.map(item=>{\r\n      if(item.id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    setCharacter(updateCharacters);\r\n    handleFavorites();\r\n  }\r\n\r\n  const switchFavoritesPlanets = (id) =>{\r\n    const updatePlanets = planets.map(item=>{\r\n      if(item.id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    setPlanets(updatePlanets);\r\n    handleFavorites();\r\n  }\r\n\r\n  const deleteFavorite = (id) =>{\r\n    const updateCharacters = characters.filter((item)=>{\r\n      if(item.id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    const updatePlanets = planets.filter((item)=>{\r\n      if(item.id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    setCharacter(updateCharacters);\r\n    setPlanets(updatePlanets);\r\n    handleFavorites();\r\n  }\r\n\r\n  const handleFavorites = () =>{\r\n    const favoritesListCharacters = characters.filter((item) => item.favorite === true);\r\n    const favoritesListPlanets = planets.filter((item) => item.favorite === true);\r\n\r\n    const favoritesList = favoritesListCharacters.concat(favoritesListPlanets);\r\n    setFavorites(favoritesList);\r\n  }\r\n\r\n\r\n\r\n  const store = useMemo(()=>{\r\n    return {characters, planets, favorites}\r\n  },[characters, planets]);\r\n\r\n  const actions = {\r\n    switchFavoritesCharacter,\r\n    switchFavoritesPlanets,\r\n    deleteFavorite\r\n  }\r\n\r\n  return(\r\n    <AppContext.Provider value={{ store, actions }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAppContext = () => useContext(AppContext);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geovanny Valladares\\\\Desktop\\\\Dise\\xF1o Web\\\\Estudio\\\\4Geeks Academy\\\\Modulo 2\\\\Star Wars Blog\\\\star-wars-blog\\\\src\\\\Context\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { apiCall } from \"../Utils/apiCall\";\nimport { getResources } from \"../Services/getResources\";\nimport { characterData, planetsData } from '../Components/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [characters, setCharacter] = useState(characterData);\n  const [planets, setPlanets] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const peopleUrls = await getResources('people');\n      const planetsUrls = await getResources('planets');\n      const vehiclesUrls = await getResources('vehicles');\n      const peopleResponse = await Promise.all(peopleUrls.results.map(character => apiCall(character.url)));\n      const planetsResponse = await Promise.all(planetsUrls.results.map(character => apiCall(character.url)));\n      const vehiclesResponse = await Promise.all(vehiclesUrls.results.map(character => apiCall(character.url)));\n      const peopleList = peopleResponse.map(character => character.result);\n      const planetList = planetsResponse.map(character => character.result);\n      const vehicleList = vehiclesResponse.map(character => character.result);\n      setCharacter(peopleList.map(character => ({\n        favorite: false,\n        ...character\n      })));\n      setPlanets(planetList.map(planet => ({\n        favorite: false,\n        ...planet\n      })));\n      setVehicles(vehicleList.map(vehicles => ({\n        favorite: false,\n        ...vehicles\n      })));\n    };\n    fetchData();\n  }, []);\n  const switchFavoritesCharacter = id => {\n    console.log(vehicles);\n    const updateCharacters = characters.map(item => {\n      if (item._id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    setCharacter(updateCharacters);\n    handleFavorites();\n  };\n  const switchFavoritesPlanets = id => {\n    const updatePlanets = planets.map(item => {\n      if (item._id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    setPlanets(updatePlanets);\n    handleFavorites();\n  };\n  const switchFavoritesVehicles = id => {\n    const updateVehicles = vehicles.map(item => {\n      if (item._id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    setVehicles(updateVehicles);\n    handleFavorites();\n  };\n  const deleteFavorite = id => {\n    const updateCharacters = characters.filter(item => {\n      if (item._id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    const updatePlanets = planets.filter(item => {\n      if (item._id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    const updateVehicles = vehicles.filter(item => {\n      if (item._id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    setCharacter(updateCharacters);\n    setPlanets(updatePlanets);\n    setVehicles(updateVehicles);\n    handleFavorites();\n  };\n  const handleFavorites = () => {\n    const favoritesListCharacters = characters.filter(item => item.favorite === true);\n    const favoritesListPlanets = planets.filter(item => item.favorite === true);\n    const favoritesListVehicles = vehicles.filter(item => item.favorite === true);\n    const favoritesList = favoritesListCharacters.concat(favoritesListPlanets, favoritesListVehicles);\n    setFavorites(favoritesList);\n  };\n  const store = useMemo(() => {\n    return {\n      characters,\n      planets,\n      vehicles,\n      favorites\n    };\n  }, [characters, planets, vehicles]);\n  const actions = {\n    switchFavoritesCharacter,\n    switchFavoritesPlanets,\n    switchFavoritesVehicles,\n    deleteFavorite\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      store,\n      actions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"bacOgSh2GH7gLDGykRCusuHm8i8=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useState","apiCall","getResources","characterData","planetsData","jsxDEV","_jsxDEV","AppContext","AppProvider","_ref","_s","children","characters","setCharacter","planets","setPlanets","vehicles","setVehicles","favorites","setFavorites","fetchData","peopleUrls","planetsUrls","vehiclesUrls","peopleResponse","Promise","all","results","map","character","url","planetsResponse","vehiclesResponse","peopleList","result","planetList","vehicleList","favorite","planet","switchFavoritesCharacter","id","console","log","updateCharacters","item","_id","handleFavorites","switchFavoritesPlanets","updatePlanets","switchFavoritesVehicles","updateVehicles","deleteFavorite","filter","favoritesListCharacters","favoritesListPlanets","favoritesListVehicles","favoritesList","concat","store","actions","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","$RefreshReg$"],"sources":["C:/Users/Geovanny Valladares/Desktop/DiseÃ±o Web/Estudio/4Geeks Academy/Modulo 2/Star Wars Blog/star-wars-blog/src/Context/AppContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\nimport { apiCall } from \"../Utils/apiCall\";\r\nimport { getResources } from \"../Services/getResources\";\r\nimport {characterData, planetsData} from '../Components/data'\r\n\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppProvider = ({children}) => {\r\n  const [characters, setCharacter]=useState(characterData);\r\n  const [planets, setPlanets]=useState([]);\r\n  const [vehicles, setVehicles] = useState([]);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    const fetchData = async () => {\r\n      const peopleUrls = await getResources('people');\r\n      const planetsUrls = await getResources('planets');\r\n      const vehiclesUrls = await getResources('vehicles');\r\n\r\n      const peopleResponse = await Promise.all(peopleUrls.results.map(character => apiCall(character.url)));\r\n      const planetsResponse = await Promise.all(planetsUrls.results.map(character => apiCall(character.url)));\r\n      const vehiclesResponse = await Promise.all(vehiclesUrls.results.map(character => apiCall(character.url)));\r\n\r\n      const peopleList = peopleResponse.map(character=> character.result);\r\n      const planetList = planetsResponse.map(character=> character.result);\r\n      const vehicleList = vehiclesResponse.map(character=> character.result);\r\n\r\n      setCharacter(peopleList.map(character=>({favorite: false, ...character})));\r\n      setPlanets(planetList.map(planet=>({favorite: false, ...planet})));\r\n      setVehicles(vehicleList.map(vehicles=>({favorite: false, ...vehicles})));\r\n    }\r\n    \r\n    fetchData();\r\n  }, [])\r\n\r\n\r\n  const switchFavoritesCharacter = (id) =>{\r\n    console.log(vehicles);\r\n    const updateCharacters = characters.map(item=>{\r\n      if(item._id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    setCharacter(updateCharacters);\r\n    handleFavorites();\r\n  }\r\n\r\n  const switchFavoritesPlanets = (id) =>{\r\n    const updatePlanets = planets.map(item=>{\r\n      if(item._id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    setPlanets(updatePlanets);\r\n    handleFavorites();\r\n  }\r\n\r\n  const switchFavoritesVehicles = (id) =>{\r\n    const updateVehicles = vehicles.map(item=>{\r\n      if(item._id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    setVehicles(updateVehicles);\r\n    handleFavorites();\r\n  }\r\n\r\n  const deleteFavorite = (id) =>{\r\n    const updateCharacters = characters.filter((item)=>{\r\n      if(item._id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    const updatePlanets = planets.filter((item)=>{\r\n      if(item._id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    const updateVehicles = vehicles.filter((item)=>{\r\n      if(item._id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    setCharacter(updateCharacters);\r\n    setPlanets(updatePlanets);\r\n    setVehicles(updateVehicles);\r\n    handleFavorites();\r\n  }\r\n\r\n  const handleFavorites = () =>{\r\n    const favoritesListCharacters = characters.filter((item) => item.favorite === true);\r\n    const favoritesListPlanets = planets.filter((item) => item.favorite === true);\r\n    const favoritesListVehicles = vehicles.filter((item) => item.favorite === true);\r\n\r\n    const favoritesList = favoritesListCharacters.concat(favoritesListPlanets, favoritesListVehicles);\r\n    setFavorites(favoritesList);\r\n  }\r\n\r\n\r\n\r\n  const store = useMemo(()=>{\r\n    return {characters, planets, vehicles, favorites}\r\n  },[characters, planets, vehicles]);\r\n\r\n  const actions = {\r\n    switchFavoritesCharacter,\r\n    switchFavoritesPlanets,\r\n    switchFavoritesVehicles,\r\n    deleteFavorite\r\n  }\r\n\r\n  return(\r\n    <AppContext.Provider value={{ store, actions }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAppContext = () => useContext(AppContext);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
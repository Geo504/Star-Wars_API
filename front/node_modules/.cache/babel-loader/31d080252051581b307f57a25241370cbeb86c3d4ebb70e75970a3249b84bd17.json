{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geovanny Valladares\\\\Desktop\\\\Dise\\xF1o Web\\\\Estudio\\\\4Geeks Academy\\\\Modulo 2\\\\Star Wars Blog\\\\star-wars-blog\\\\src\\\\Context\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { characterData, planetsData } from '../Components/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [characters, setCharacter] = useState(characterData);\n  const [planets, setPlanets] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const getCharacterData = async () => {\n    try {\n      const response = await fetch(\"https://www.swapi.tech/api/people\").then(res => {\n        if (!(res.status >= 200 && res.status < 300)) {\n          throw Error(`You have an error ${res.status} in request data!`);\n        }\n        return res.json();\n      }).then(response => {\n        return response.results;\n      });\n      const charactersList = await Promise.all(response.map(async character => {\n        const response = await fetch(character.url);\n        if (!(response.status >= 200 && response.status < 300)) {\n          throw Error(`You have an error ${response.status} in request data!`);\n        }\n        const charaterInfo = await response.json();\n        return charaterInfo.result.properties;\n      }));\n      return setCharacter(charactersList.map(character => ({\n        favorite: false,\n        ...character\n      })));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(getCharacterData, []);\n  useEffect(() => {\n    setPlanets(planetsData.map(planet => ({\n      favorite: false,\n      ...planet\n    })));\n  }, []);\n  const switchFavoritesCharacter = id => {\n    const updateCharacters = characters.map(item => {\n      if (item.id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    setCharacter(updateCharacters);\n    handleFavorites();\n  };\n  const switchFavoritesPlanets = id => {\n    const updatePlanets = planets.map(item => {\n      if (item.id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    setPlanets(updatePlanets);\n    handleFavorites();\n  };\n  const deleteFavorite = id => {\n    const updateCharacters = characters.filter(item => {\n      if (item.id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    const updatePlanets = planets.filter(item => {\n      if (item.id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    setCharacter(updateCharacters);\n    setPlanets(updatePlanets);\n    handleFavorites();\n  };\n  const handleFavorites = () => {\n    const favoritesListCharacters = characters.filter(item => item.favorite === true);\n    const favoritesListPlanets = planets.filter(item => item.favorite === true);\n    const favoritesList = favoritesListCharacters.concat(favoritesListPlanets);\n    setFavorites(favoritesList);\n  };\n  const store = useMemo(() => {\n    return {\n      characters,\n      planets,\n      favorites\n    };\n  }, [characters, planets]);\n  const actions = {\n    switchFavoritesCharacter,\n    switchFavoritesPlanets,\n    deleteFavorite\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      store,\n      actions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"mul3xpwvFYTRDGi5dCS2jpgmT7Y=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useState","characterData","planetsData","jsxDEV","_jsxDEV","AppContext","AppProvider","_ref","_s","children","characters","setCharacter","planets","setPlanets","favorites","setFavorites","getCharacterData","response","fetch","then","res","status","Error","json","results","charactersList","Promise","all","map","character","url","charaterInfo","result","properties","favorite","err","console","log","planet","switchFavoritesCharacter","id","updateCharacters","item","handleFavorites","switchFavoritesPlanets","updatePlanets","deleteFavorite","filter","favoritesListCharacters","favoritesListPlanets","favoritesList","concat","store","actions","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","$RefreshReg$"],"sources":["C:/Users/Geovanny Valladares/Desktop/DiseÃ±o Web/Estudio/4Geeks Academy/Modulo 2/Star Wars Blog/star-wars-blog/src/Context/AppContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\nimport {characterData, planetsData} from '../Components/data'\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppProvider = ({children}) => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const [characters, setCharacter]=useState(characterData);\r\n  const [planets, setPlanets]=useState([]);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n\r\n  const getCharacterData = async() => {\r\n    try{\r\n      const response = await fetch(\"https://www.swapi.tech/api/people\")\r\n        .then((res) => {\r\n          if (!(res.status >= 200 && res.status < 300)) {\r\n            throw Error(`You have an error ${res.status} in request data!`);\r\n          }\r\n          return res.json();\r\n        })\r\n        .then(response=>{\r\n          return response.results;\r\n        });\r\n      const charactersList = await Promise.all(\r\n        response.map(async character =>{\r\n          const response = await fetch(character.url);\r\n          if (!(response.status >= 200 && response.status < 300)) {\r\n            throw Error(`You have an error ${response.status} in request data!`);\r\n          }\r\n          const charaterInfo = await response.json();\r\n          return (charaterInfo.result.properties);\r\n        })\r\n      )\r\n      \r\n      return setCharacter(charactersList.map(character=>({favorite: false, ...character})));\r\n    }\r\n    catch (err) {console.log(err)}\r\n  };\r\n  useEffect(getCharacterData,[]);\r\n  \r\n\r\n  useEffect(()=>{\r\n    setPlanets(planetsData.map(planet=>({favorite: false, ...planet})));\r\n  },[])\r\n\r\n\r\n\r\n  const switchFavoritesCharacter = (id) =>{\r\n    const updateCharacters = characters.map(item=>{\r\n      if(item.id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    setCharacter(updateCharacters);\r\n    handleFavorites();\r\n  }\r\n\r\n  const switchFavoritesPlanets = (id) =>{\r\n    const updatePlanets = planets.map(item=>{\r\n      if(item.id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    setPlanets(updatePlanets);\r\n    handleFavorites();\r\n  }\r\n\r\n  const deleteFavorite = (id) =>{\r\n    const updateCharacters = characters.filter((item)=>{\r\n      if(item.id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    const updatePlanets = planets.filter((item)=>{\r\n      if(item.id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    setCharacter(updateCharacters);\r\n    setPlanets(updatePlanets);\r\n    handleFavorites();\r\n  }\r\n\r\n  const handleFavorites = () =>{\r\n    const favoritesListCharacters = characters.filter((item) => item.favorite === true);\r\n    const favoritesListPlanets = planets.filter((item) => item.favorite === true);\r\n\r\n    const favoritesList = favoritesListCharacters.concat(favoritesListPlanets);\r\n    setFavorites(favoritesList);\r\n  }\r\n\r\n\r\n\r\n  const store = useMemo(()=>{\r\n    return {characters, planets, favorites}\r\n  },[characters, planets]);\r\n\r\n  const actions = {\r\n    switchFavoritesCharacter,\r\n    switchFavoritesPlanets,\r\n    deleteFavorite\r\n  }\r\n\r\n  return(\r\n    <AppContext.Provider value={{ store, actions }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAppContext = () => useContext(AppContext);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Geovanny Valladares\\\\Desktop\\\\Dise\\xF1o Web\\\\Estudio\\\\4Geeks Academy\\\\Modulo 2\\\\Star Wars Blog\\\\star-wars-blog\\\\src\\\\Context\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { apiCall } from \"../Utils/apiCall\";\nimport { getResources } from \"../Services/getResources\";\nimport { characterData, planetsData } from '../Components/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // const getCharacterData = async() => {\n  //   try{\n  // const response = await fetch(\"https://www.swapi.tech/api/people\")\n  //       .then((res) => {\n  //         if (!(res.status >= 200 && res.status < 300)) {\n  //           throw Error(`You have an error ${res.status} in request data!`);\n  //         }\n  //         return res.json();\n  //       })\n  //       .then(response=>{\n  //         return response.results;\n  //       });\n  // const charactersList = await Promise.all(\n  //       response.map(async character =>{\n  //         const response = await fetch(character.url);\n  //         if (!(response.status >= 200 && response.status < 300)) {\n  //           throw Error(`You have an error ${response.status} in request data!`);\n  //         }\n  //         const charaterInfo = await response.json();\n  //         return (charaterInfo.result);\n  //       })\n  //     )\n  //     return console.log(charactersList);\n  //   }\n  //   catch (err) {console.log(err)}\n  // };\n\n  // getCharacterData();\n\n  const [characters, setCharacter] = useState(characterData);\n  const [planets, setPlanets] = useState([]);\n  const [vehicles, setVehicles] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const peopleUrls = await getResources('people');\n      const planetsUrls = await getResources('planets');\n      const vehiclesUrls = await getResources('vehicles');\n      const peopleResponse = await Promise.all(peopleUrls.results.map(character => apiCall(character.url)));\n      const planetsResponse = await Promise.all(planetsUrls.results.map(character => apiCall(character.url)));\n      const vehiclesResponse = await Promise.all(vehiclesUrls.results.map(character => apiCall(character.url)));\n      console.log(planetsResponse);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    setCharacter(characters.map(character => ({\n      favorite: false,\n      ...character\n    })));\n  }, []);\n  useEffect(() => {\n    setPlanets(planetsData.map(planet => ({\n      favorite: false,\n      ...planet\n    })));\n  }, []);\n  const switchFavoritesCharacter = id => {\n    const updateCharacters = characters.map(item => {\n      if (item._id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    setCharacter(updateCharacters);\n    handleFavorites();\n  };\n  const switchFavoritesPlanets = id => {\n    const updatePlanets = planets.map(item => {\n      if (item._id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    setPlanets(updatePlanets);\n    handleFavorites();\n  };\n  const deleteFavorite = id => {\n    const updateCharacters = characters.filter(item => {\n      if (item._id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    const updatePlanets = planets.filter(item => {\n      if (item._id === id) {\n        item.favorite = !item.favorite;\n      }\n      return item;\n    });\n    setCharacter(updateCharacters);\n    setPlanets(updatePlanets);\n    handleFavorites();\n  };\n  const handleFavorites = () => {\n    const favoritesListCharacters = characters.filter(item => item.favorite === true);\n    const favoritesListPlanets = planets.filter(item => item.favorite === true);\n    const favoritesList = favoritesListCharacters.concat(favoritesListPlanets);\n    setFavorites(favoritesList);\n  };\n  const store = useMemo(() => {\n    return {\n      characters,\n      planets,\n      favorites\n    };\n  }, [characters, planets]);\n  const actions = {\n    switchFavoritesCharacter,\n    switchFavoritesPlanets,\n    deleteFavorite\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      store,\n      actions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"fx147xdQBnCzlNayhL+vkDon10Q=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useState","apiCall","getResources","characterData","planetsData","jsxDEV","_jsxDEV","AppContext","AppProvider","_ref","_s","children","characters","setCharacter","planets","setPlanets","vehicles","setVehicles","favorites","setFavorites","fetchData","peopleUrls","planetsUrls","vehiclesUrls","peopleResponse","Promise","all","results","map","character","url","planetsResponse","vehiclesResponse","console","log","favorite","planet","switchFavoritesCharacter","id","updateCharacters","item","_id","handleFavorites","switchFavoritesPlanets","updatePlanets","deleteFavorite","filter","favoritesListCharacters","favoritesListPlanets","favoritesList","concat","store","actions","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","$RefreshReg$"],"sources":["C:/Users/Geovanny Valladares/Desktop/DiseÃ±o Web/Estudio/4Geeks Academy/Modulo 2/Star Wars Blog/star-wars-blog/src/Context/AppContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\nimport { apiCall } from \"../Utils/apiCall\";\r\nimport { getResources } from \"../Services/getResources\";\r\nimport {characterData, planetsData} from '../Components/data'\r\n\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppProvider = ({children}) => {\r\n\r\n  // const getCharacterData = async() => {\r\n  //   try{\r\n      // const response = await fetch(\"https://www.swapi.tech/api/people\")\r\n  //       .then((res) => {\r\n  //         if (!(res.status >= 200 && res.status < 300)) {\r\n  //           throw Error(`You have an error ${res.status} in request data!`);\r\n  //         }\r\n  //         return res.json();\r\n  //       })\r\n  //       .then(response=>{\r\n  //         return response.results;\r\n  //       });\r\n      // const charactersList = await Promise.all(\r\n  //       response.map(async character =>{\r\n  //         const response = await fetch(character.url);\r\n  //         if (!(response.status >= 200 && response.status < 300)) {\r\n  //           throw Error(`You have an error ${response.status} in request data!`);\r\n  //         }\r\n  //         const charaterInfo = await response.json();\r\n  //         return (charaterInfo.result);\r\n  //       })\r\n  //     )\r\n  //     return console.log(charactersList);\r\n  //   }\r\n  //   catch (err) {console.log(err)}\r\n  // };\r\n  \r\n  // getCharacterData();\r\n\r\n\r\n  const [characters, setCharacter]=useState(characterData);\r\n  const [planets, setPlanets]=useState([]);\r\n  const [vehicles, setVehicles] = useState([]);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    const fetchData = async () => {\r\n      const peopleUrls = await getResources('people');\r\n      const planetsUrls = await getResources('planets');\r\n      const vehiclesUrls = await getResources('vehicles');\r\n\r\n      const peopleResponse = await Promise.all(peopleUrls.results.map(character => apiCall(character.url)));\r\n      const planetsResponse = await Promise.all(planetsUrls.results.map(character => apiCall(character.url)));\r\n      const vehiclesResponse = await Promise.all(vehiclesUrls.results.map(character => apiCall(character.url)));\r\n\r\n      console.log(planetsResponse)\r\n    }\r\n    \r\n    fetchData();\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    setCharacter(characters.map(character=>({favorite: false, ...character})));\r\n  },[]);\r\n\r\n  useEffect(()=>{\r\n    setPlanets(planetsData.map(planet=>({favorite: false, ...planet})));\r\n  },[])\r\n\r\n\r\n\r\n  const switchFavoritesCharacter = (id) =>{\r\n    const updateCharacters = characters.map(item=>{\r\n      if(item._id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    setCharacter(updateCharacters);\r\n    handleFavorites();\r\n  }\r\n\r\n  const switchFavoritesPlanets = (id) =>{\r\n    const updatePlanets = planets.map(item=>{\r\n      if(item._id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    setPlanets(updatePlanets);\r\n    handleFavorites();\r\n  }\r\n\r\n  const deleteFavorite = (id) =>{\r\n    const updateCharacters = characters.filter((item)=>{\r\n      if(item._id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    const updatePlanets = planets.filter((item)=>{\r\n      if(item._id === id){\r\n        item.favorite = !item.favorite;\r\n      }\r\n      return item;\r\n    });\r\n    setCharacter(updateCharacters);\r\n    setPlanets(updatePlanets);\r\n    handleFavorites();\r\n  }\r\n\r\n  const handleFavorites = () =>{\r\n    const favoritesListCharacters = characters.filter((item) => item.favorite === true);\r\n    const favoritesListPlanets = planets.filter((item) => item.favorite === true);\r\n\r\n    const favoritesList = favoritesListCharacters.concat(favoritesListPlanets);\r\n    setFavorites(favoritesList);\r\n  }\r\n\r\n\r\n\r\n  const store = useMemo(()=>{\r\n    return {characters, planets, favorites}\r\n  },[characters, planets]);\r\n\r\n  const actions = {\r\n    switchFavoritesCharacter,\r\n    switchFavoritesPlanets,\r\n    deleteFavorite\r\n  }\r\n\r\n  return(\r\n    <AppContext.Provider value={{ store, actions }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAppContext = () => useContext(AppContext);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}